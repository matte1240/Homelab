---
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Install Docker prerequisites
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - python3-pip
    state: present

- name: Create keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /tmp/docker.gpg
    mode: '0644'

- name: Dearmor Docker GPG key
  ansible.builtin.shell: gpg --dearmor < /tmp/docker.gpg > /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_facts.distribution_release }} stable"
    state: present
    update_cache: true

- name: Install Docker packages
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: Configure Docker daemon
  ansible.builtin.copy:
    content: "{{ docker_daemon_options | to_nice_json }}"
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: '0644'
  notify: restart docker

- name: Create docker group
  ansible.builtin.group:
    name: docker
    state: present

- name: Add users to docker group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  loop: "{{ docker_users }}"
  notify: restart docker

- name: Reset SSH connection to activate docker group membership
  ansible.builtin.meta: reset_connection

- name: Enable and start Docker service
  ansible.builtin.systemd:
    name: docker
    enabled: true
    state: started

- name: Install Python Docker libraries via apt
  ansible.builtin.apt:
    name:
      - python3-docker
      - python3-requests
    state: present

- name: Verify Docker installation
  ansible.builtin.command: docker --version
  register: docker_version
  changed_when: false

- name: Verify Docker Compose installation
  ansible.builtin.command: docker compose version
  register: compose_version
  changed_when: false

- name: Display Docker versions
  ansible.builtin.debug:
    msg: 
      - "{{ docker_version.stdout }}"
      - "{{ compose_version.stdout }}"